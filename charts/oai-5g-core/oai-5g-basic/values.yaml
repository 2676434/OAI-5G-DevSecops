mysql:
  image: "@MYSQL_REPO@"
  imageTag: "@MYSQL_TAG@"
  enabled: true
  weight: 0
  imagePullPolicy: IfNotPresent
  oai5gdatabase: basic
  imagePullSecrets:
    - name: "regcred"
  persistence:
    enabled: false
oai-nrf:
  enabled: true
  weight: 0
  kubernetesType: Vanilla #Openshift/Vanilla Vanilla for Upstream Kubernetes
  nfimage:  # image name either locally present or in a public/private repository
    repository: @NRF_REPO@  ## docker.io/oaisoftwarealliance/oai-nrf           ## The image will be pulled from dockerhub
    version: @NRF_TAG@ ## The branch to be used to pull from dockerhub
    # pullPolicy: IfNo tPresent or Never or Always
    pullPolicy: IfNotPresent
  includeTcpDumpContainer: @TCPDUMP_CONTAINER@ #only for taking pcaps inside network function pod
  imagePullSecrets:
    - name: "regcred"
  config:
    logLevel: "debug"   #allowed info/error/debug
  nodeSelector: {}
oai-udr:
  enabled: true
  weight: 1
  kubernetesType: Vanilla #Openshift/Vanilla Vanilla for Upstream Kubernetes
  nfimage:  # image name either locally present or in a public/private repository
    repository: @UDR_REPO@ #docker.io/oaisoftwarealliance/oai-udr           ## The image will be pulled from dockerhub
    version: @UDR_TAG@  ## The branch to be used to pull from dockerhub
    # pullPolicy: IfNotPresent or Never or Always
    pullPolicy: IfNotPresent
  includeTcpDumpContainer: @TCPDUMP_CONTAINER@ #only for taking pcaps inside network function pod
  imagePullSecrets:
    - name: "regcred"
  config:
    logLevel: "debug"   #allowed info/error/debug
  nodeSelector: {}
oai-udm:
  enabled: true
  weight: 2
  kubernetesType: Vanilla #Openshift/Vanilla Vanilla for Upstream Kubernetes
  nfimage:  # image name either locally present or in a public/private repository
    repository: @UDM_REPO@ #docker.io/oaisoftwarealliance/oai-udm           ## The image will be pulled from dockerhub
    version: @UDM_TAG@ ## The branch to be used to pull from dockerhub
    # pullPolicy: IfNotPresent or Never or Always
    pullPolicy: IfNotPresent
  includeTcpDumpContainer: @TCPDUMP_CONTAINER@ #only for taking pcaps inside network function pod
  imagePullSecrets:
    - name: "regcred"
  config:
    logLevel: "debug"   #allowed info/error/debug
  nodeSelector: {}
oai-ausf:
  enabled: true
  weight: 3
  kubernetesType: Vanilla #Openshift/Vanilla Vanilla for Upstream Kubernetes
  nfimage:  # image name either locally present or in a public/private repository
    repository: @AUSF_REPO@ #docker.io/oaisoftwarealliance/oai-ausf           ## The image will be pulled from dockerhub
    version: @AUSF_TAG@ ## The branch to be used to pull from dockerhub
    # pullPolicy: IfNotPresent or Never or Always
    pullPolicy: IfNotPresent
  start:
    tcpdump: @START_TCPDUMP@
  includeTcpDumpContainer: @TCPDUMP_CONTAINER@ #only for taking pcaps inside network function pod
  imagePullSecrets:
    - name: "regcred"
  securityContext:
    privileged: @PRIVILEGED@
  persistent:
    sharedvolume: @SHAREDVOLUME@
  config:
    logLevel: "debug"   #allowed info/error/debug
  nodeSelector: {}
oai-amf:
  enabled: true
  weight: 4
  kubernetesType: Vanilla #Openshift/Vanilla Vanilla for Upstream Kubernetes
  nfimage:  # image name either locally present or in a public/private repository
    repository: @AMF_REPO@ #docker.io/oaisoftwarealliance/oai-amf           ## The image will be pulled from dockerhub
    version: @AMF_TAG@ ## The branch to be used to pull from dockerhub
    # pullPolicy: IfNotPresent or Never or Always
    pullPolicy: IfNotPresent
  start:
    tcpdump: @START_TCPDUMP@
  includeTcpDumpContainer: @TCPDUMP_CONTAINER@ #only for taking pcaps inside network function pod
  imagePullSecrets:
    - name: "regcred"
  securityContext:
    privileged: @PRIVILEGED@
  persistent:
    sharedvolume: @SHAREDVOLUME@
  multus:
    ## If you don't want to add a default route in your pod then leave this field empty
    defaultGateway: "@CN_DEFAULT_GW@"
    n2Interface:
      create: @MULTUS_AMF_N2@
      Ipadd: "@IP_AMF_N2@"
      Netmask: "@NETMASK_AMF_N2@"
      ## If you do not need a specific mac address leave the field empty
      Mac: "@MAC_AMF_N2@"
      ## If you do not have a gateway leave the field empty
      Gateway: "@GW_AMF_N2@"
      ## If you do not want to add any routes in your pod then leave this field empty
      routes: "@ROUTES_AMF_N2@"
      hostInterface: "@IF_NAME_AMF_N2@" # Interface of the host machine on which this pod will be scheduled
  config:
    amfInterfaceNameForNGAP: "@IF_N2@" # If oai-amf.multus.n2Interface.create is true then n2 else eth0
    amfInterfaceNameForSBI: "eth0"  # Service based interface
    externalAusf: "yes"
    logLevel: "debug"   #allowed info/error/debug
    # Mandatory
    sst0: "@NSSAI_SST0@"         ## 1 slice/SST is mandatory
    sd0: "@NSSAI_SD0@"   ## Optional 0xFFFFFF means no SD as per 3GPP
    ## Can add upto 3 more slices. More than that you can do it in the configmap of amf templates/configmap.yaml
    # Note only SST is mandatory for a slice SD is optional
    sst1: "1"
    sd1: "1"
    mcc: "@MCC@"
    mnc: "@MNC@"
    tac: "@TAC@"
    nfRegistration: "yes"
    smfSelection: "no"        #Bug in SMF can not have SMF selection when using UDR to fetch user-information
    useHttp2: "no"
    intAlgoList: '[ "NIA1" , "NIA2" ]'
    ciphAlgoList: '[ "NEA0" , "NEA1" , "NEA2" ]'
  nodeSelector: {}
  nodeName: @NODE_AMF@
oai-spgwu-tiny:
  enabled: true
  weight: 5
  kubernetesType: Vanilla #Openshift/Vanilla Vanilla for Upstream Kubernetes
  nfimage:  # image name either locally present or in a public/private repository
    repository: @SPGWU_REPO@ #docker.io/oaisoftwarealliance/oai-spgwu-tiny    ## The image will be pulled from dockerhub
    version: @SPGWU_TAG@ ## The branch to be used to pull from dockerhub
    # pullPolicy: IfNotPresent or Never or Always
    pullPolicy: IfNotPresent
  start:
    tcpdump: @START_TCPDUMP@
  includeTcpDumpContainer: @TCPDUMP_CONTAINER@ #only for taking pcaps inside network function pod or running iperf
  imagePullSecrets:
    - name: "regcred"
  # create an extra interface for N3 incase the gNB is outside the cluster network or there is a need to have dedicated interface for N3
  ## Change these ip-addresses according to your environment
  ## N4, N6 are optional only if you want that UPF uses different subnets for different 3gpp interfaces. 
  multus:
    defaultGateway: "@CN_DEFAULT_GW@"
    n3Interface:
      create: @MULTUS_SPGWU_N3@
      Ipadd: "@IP_SPGWU_N3@"
      Netmask: "@NETMASK_SPGWU_N3@"
      ## If you do not need a specific mac address leave the field empty
      Mac: "@MAC_SPGWU_N3@"
      ## If you do not have a gateway leave the field empty
      Gateway: "@GW_SPGWU_N3@"
      ## If you do not want to add any routes in your pod then leave this field empty
      routes: "@ROUTES_SPGWU_N3@" 
      hostInterface: "@IF_NAME_SPGWU_N3@"
    n4Interface:
      create: @MULTUS_SPGWU_N4@
      Ipadd: "@IP_SPGWU_N4@" 
      Netmask: "@NETMASK_SPGWU_N4@"
      ## If you do not need a specific mac address leave the field empty
      Mac: "@MAC_SPGWU_N4@"
      ## If you do not have a gateway leave the field empty
      Gateway: "@GW_SPGWU_N4@"
      ## If you do not want to add any routes in your pod then leave this field empty
      routes: "@ROUTES_SPGWU_N4@"
      hostInterface: "@IF_NAME_SPGWU_N4@"
    n6Interface:
      create: @MULTUS_SPGWU_N6@
      Ipadd: "@IP_SPGWU_N6@" 
      Netmask: "@NETMASK_SPGWU_N6@"
      ## If you do not need a specific mac address leave the field empty
      Mac: "@MAC_SPGWU_N6@"
      ## If you do not have a gateway leave the field empty
      Gateway: "@GW_SPGWU_N6@"
      ## If you do not want to add any routes in your pod then leave this field empty
      routes: "@ROUTES_SPGWU_N6@"
      hostInterface: "@IF_NAME_SPGWU_N6@"
  #NOTE: If the interface you selected for n6If is wrong then traffic will not be routed towards internet
  persistent:
    sharedvolume: @SHAREDVOLUME@
  config:
    n3If: "@IF_N3@"  # n3 if multus.n3Interface.create is true
    n4If: "@IF_N4@" # n4 if multus.n4Interface.create is true
    n6If: "@IF_N6@"  # n6 multus.n6Interface.create is true
    logLevel: "info"   #allowed info/error/debug
    threadsN3Ul: "1"
    threadsN6Dl: "1"
    threadsN6Prio: 99
    threadsN3Prio: 98
    threadsN4Prio: 88
    netUeIp: "12.1.1.0/24"  # The range in which UE ip-address will be allocated should be configured the same in SMF
    registerNRF: "yes"
    nrfFqdn: "oai-nrf-svc" # make sure this can be resolved by container dns
    #Mandatory to configure atlease one slice
    nssaiSst0: @NSSAI_SST0@   # should match with SMF information
    nssaiSd0: "@NSSAI_SD0@"  # should match with SMF information (Optional, if removed sd value will be 0xFFFFFF)
    dnn0: "@DNN0@" # should match with SMF information
    #Upto 4 slices can be added from here to add more you need to add manullay in config.yaml. Please follow the same way of adding slices nssaiSST$,nssaiSd$,dnn$ ($=0,1,2,3)
    nssaiSst1: 1 # should match with SMF information (Optional, if removed slice will not be configured)
    nssaiSd1: "0xFFFFFF"  # should match with SMF information (Optional, if removed sd value will be 0xFFFFFF only if nssaiSst1 is configured)
    dnn1: "ims" # should match with SMF information
  nodeSelector: {}
  nodeName: @NODE_SPGWU@
#oai-traffic-server:
#  enabled: false
#  weight: 6
#  kubernetesType: Vanilla
#  trafficServer:
#    repository: docker.io/oaisoftwarealliance/trf-gen-cn5g
#    version: latest
#    #pullPolicy: IfNotPresent or Never or Always
#    pullPolicy: IfNotPresent
#  #Without multus traffic server won't be able to forward packets to spgwu if can't use server then add an extra container in spgwu with iperf3 or install iperf3 package in tcpdump container
#  multus:
#    create: true
#    IPadd: "172.21.6.99"
#    Netmask: "22"
#    defaultGateway: "@CN_DEFAULT_GW@"
#    hostInterface: "bond0" # Interface of the host machine on which this pod will be scheduled
#  config:
#    ueroute: 12.1.1.0/24
#    upfIpadd: 172.21.6.95
#    noOfIperf3Server: 10
oai-smf:
  enabled: true
  weight: 6
  kubernetesType: Vanilla #Openshift/Vanilla Vanilla for Upstream Kubernetes
  nfimage:  # image name either locally present or in a public/private repository
    repository: @SMF_REPO@ #docker.io/oaisoftwarealliance/oai-smf           ## The image will be pulled from dockerhub
    version: @SMF_TAG@ ## The branch to be used to pull from dockerhub
    # pullPolicy: IfNotPresent or Never or Always
    pullPolicy: IfNotPresent
  start:
    tcpdump: @START_TCPDUMP@
  includeTcpDumpContainer: @TCPDUMP_CONTAINER@ #only for taking pcaps inside network function pod
  multus:
    defaultGateway: "@CN_DEFAULT_GW@"
    n4Interface:
      create: @MULTUS_SMF_N4@
      IPadd: "@IP_SMF_N4@"
      Netmask: "@NETMASK_SMF_N4@"
      ## If you do not need a specific mac address leave the field empty
      Mac: "@MAC_SMF_N4@"
      ## If you do not have a gateway leave the field with ""
      Gateway: "@GW_SMF_N4@"
      ## If you do not want to add any routes in your pod then leave this field empty
      routes: "@ROUTES_SMF_N4@" 
      hostInterface: "@IF_NAME_SMF_N4@"
  imagePullSecrets:
    - name: "regcred"
  securityContext:
    privileged: @PRIVILEGED@
  persistent:
    sharedvolume: @SHAREDVOLUME@
  config:
    useLocalSubscriptionInfo: "no" #this means ip-address information will be fetched from UDR
    ueMtu: 1500
    logLevel: "debug"   #allowed info/error/debug
    dnsIpv4Address: "@IP_DNS1@" # configure the dns for UE don't use Kubernetes DNS
    dnsSecIpv4Address: "@IP_DNS2@" # configure the dns for UE don't use Kubernetes DNS
    defaultCSCFIpv4Address: "@IP_CSCF@" # For IMS server. MUST INCLUDE AN IP ADDRESS, ELSE THE POD CRASHES !!! 
    discoverUpf: "yes"              # if NRF is used then it can be used for UPF discovery
    # You can define maximum 4 slices from here in case of more please change the configuration file.
    dnnNi0: "@DNN0@"
    pdusessiontype0: "IPv4"
    ipv4dnnRange0: "12.1.1.2 - 12.1.1.254"
    nssaiSst0: @NSSAI_SST0@
    nssaiSd0: "@NSSAI_SD0@"
    qosProfile5qi0: 2
    sessionAmbrUl0: "1000Mbps"
    sessionAmbrDl0: "1000Mbps"
    # Extra optional slice
    dnnNi1: "ims"
    pdusessiontype1: "IPv4v6"
    ipv4dnnRange1: "12.2.1.2 - 12.2.1.254"
    nssaiSst1: 1
    nssaiSd1: "0xFFFFFF"
    qosProfile5qi1: 1
    sessionAmbrUl1: "1000Mbps"
    sessionAmbrDl1: "1000Mbps"
  nodeSelector: {}
  nodeName: @NODE_SMF@
