kubernetesType: Vanilla  #Vanilla for community kubernetes distribution else Openshift for Openshift

## In case of using these charts on Openshift then please use UBI images
## To know more about them follow this tutorial https://gitlab.eurecom.fr/oai/cn5g/oai-cn5g-fed/-/tree/master/openshift
nfimage:   # image name either locally present or in a public/private repository
  repository: docker.io/oaisoftwarealliance/oai-gnb           ## dockerhub oaisoftwarealliance/oai-gnb
  version: develop # image tag
  # pullPolicy: IfNotPresent or Never or Always
  pullPolicy: IfNotPresent

## good to use when pulling images from docker-hub mention
imagePullSecrets:
  - name: "regcred"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "oai-gnb-du-sa"


# oai-gnb-du helm-charts can be used in RFSimulated mode which does not require multiple interaces. 
# In case you use the charts with a RU/USRP you need a dedicated interface with the RU. 
## Change these ip-addresses according to your environment

multus:
  # if defaultGateway is commented then it will be remove
  defaultGateway: "172.21.7.254"
  f1Interface:
    create: false
    IPadd: "172.21.6.100"
    Netmask: "22"
    # if gatway is commented then it will be remove
    #Gateway: "172.21.7.254"
    hostInterface: "bond0"      # Interface of the host machine on which this pod will be scheduled
  ruInterface:            #Only needed if using a ethernet based RU/USRP
    create: false
    IPadd: "192.168.80.90"
    Netmask: "24"
    # if gatway is commented then it will be remove
    #Gateway: "192.168.80.1"  #In case you don't have a gateway remove it from here
    ## The value must be [0, master's MTU]. If commented it will masters MTU
    #mtu: 9000
    hostInterface: "bond0"      # Interface of the host machine on which this pod will be scheduled

## If you want to change more configuration parameters then you should mount the config file or use it from 
# https://gitlab.eurecom.fr/oai/openairinterface5g/-/tree/develop/targets/PROJECTS/GENERIC-NR-5GC/CONF 
config:
  mountConfig: false          #If config file is mounted then please edit mount.conf in configmap.yaml properly 
  timeZone: "Europe/Paris"
  useAdditionalOptions: "--sa --rfsim --log_config.global_log_options level,nocolor,time"
  # If mounting the configuration file then below parameters are not used
  rfSimulator: "server"
  gnbduName: "oai-du-rfsim"
  useSaTDDcu: "yes"
  mcc: "001"   # check the information with AMF, SMF, UPF/SPGWU
  mnc: "01"    # check the information with AMF, SMF, UPF/SPGWU
  mncLength: "2" # check the information with AMF, SMF, UPF/SPGWU
  tac: "1"     # check the information with AMF
  nssaiSst: "1"  #currently only 4 standard values are allowed 1,2,3,4
  nssaiSd0: "ffffff"    #values in hexa-decimal format
  amfIpAddress: "127.0.0.1"  # Not mandatory, you can leave it like this in coming release it will be removed
  gnbNgaIfName: "eth0"            # net1 in case multus create is true that means another interface is created for ngap interface, n2 to communicate with amf
  gnbNgaIpAddress: "status.podIP" # f1Interface.Ipadd in case multus create is true
  gnbNguIfName: "eth0"   #net2 in case multus create is true gtu interface for upf/spgwu
  gnbNguIpAddress: "status.podIP" # f1Interface.Ipadd in case multus create is true
  f1IfName: "eth0"                # net1 incase multus create is true
  f1cuIpAddress: "10.244.0.16"     # replace this value with CU f1 ip-address or CU-CP F1C ip-address if not using multus
  f1duIpAddress: "status.podIP"
  f1cuPort: "2152"
  f1duPort: "2152"

## Debugging section
podSecurityContext:
  runAsUser: 0
  runAsGroup: 0

start:
  gnbdu: true #If false the network function container will run in sleep mode for manually testing
  tcpdump: false

includeTcpDumpContainer: false #If true it will add a tcpdump container inside network function pod for debugging

## For openshift you can use rhel8/support-tools:8.7-13
tcpdumpimage:
   repository: docker.io/corfr/tcpdump
   version: latest
   #pullPolicy: IfNotPresent or Never or Always
   pullPolicy: IfNotPresent

resources:
  define: false
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
   cpu: 100m
   memory: 256Mi


tolerations: []

affinity: {}

terminationGracePeriodSeconds: 5

nodeSelector: {}

nodeName: 