kubernetesType: Vanilla  #Vanilla for community kubernetes distribution

nfimage:   # image name either locally present or in a public/private repository
  repository: docker.io/oaisoftwarealliance/oai-gnb           ## dockerhub oaisoftwarealliance/oai-gnb  
  version: develop # image tag
  # pullPolicy: IfNotPresent or Never or Always
  pullPolicy: IfNotPresent

## good to use when pulling images from docker-hub mention 
imagePullSecrets: 
  - name: "regcred"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "oai-gnb-cu-sa"

# oai-cu can be configured with multiple interface which may correspond to 3GPP logical interfaces. There can be one to one or one to many. 
# In case of one to one mapping f1, n2, n3 all can have seperate virtual interfaces. 
# In one to many mapping f1,n2 and n3 all can be mapped to one virtual interface. 
# Interface mapping is strictly based on your networking environment 

multus:
  # if defaultGateway is commented then it will be remove
  defaultGateway: 172.21.7.254
  n2Interface:
    create: false
    IPadd: "172.21.6.90"
    Netmask: "22"
    # if gatway is commented then it will be remove
    Gateway: "172.21.7.254"
    hostInterface: "bond0"      # Interface of the host machine on which this pod will be scheduled
  n3Interface:
    create: false
    IPadd: "172.21.6.91"
    Netmask: "22"
    # if gatway is commented then it will be remove
    Gateway: "172.21.7.254"
    hostInterface: "bond0"      # Interface of the host machine on which this pod will be scheduled
  f1Interface:
    create: false
    IPadd: "172.21.6.92"
    Netmask: "22"
    # if gatway is commented then it will be remove
    Gateway: "172.21.7.254"
    hostInterface: "bond0"      # Interface of the host machine on which this pod will be scheduled

## If you want to change more configuration parameters then you should mount the config file or use it from 
# https://gitlab.eurecom.fr/oai/openairinterface5g/-/tree/develop/targets/PROJECTS/GENERIC-NR-5GC/CONF 
config:
  mountConfig: false          #If config file is mounted then please edit mount.conf in configmap.yaml properly 
  timeZone: "Europe/Paris"
  useAdditionalOptions: "--sa --log_config.global_log_options level,nocolor,time"
  # If mounting the configuration file then below parameters are not used
  gnbcuName: "oai-cu"
  useSAcu: "yes"
  mcc: "001"   # check the information with AMF, SMF, UPF/SPGWU
  mnc: "01"    # check the information with AMF, SMF, UPF/SPGWU
  mncLength: "2" # check the information with AMF, SMF, UPF/SPGWU
  tac: "1"     # check the information with AMF
  nssaiSst: "1"  #currently only 4 standard values are allowed 1,2,3,4 
  nssaiSd0: "ffffff"    #values in hexa-decimal format
  #entrypoint.sh tries to resolve the amfHost name if the resolution did not work gNB will not start
  amfIpAddress: "oai-amf-svc"     # amf ip-address oai-amf-svc or 172.21.6.94
  gnbNgaIfName: "eth0"            # net1 in case multus create is true that means another interface is created for ngap interface, n2 to communicate with amf
  gnbNgaIpAddress: "status.podIP" # n2Interface.IPadd in case multus create is true
  gnbNguIfName: "eth0"   #net2 in case multus create is true gtu interface for upf/spgwu
  gnbNguIpAddress: "status.podIP" # n3Interface.IPadd in case multus create is true
  f1IfName: "eth0"                # net3 incase multus create is true
  f1cuIpAddress: "status.podIP"   # f1Interface.IPadd
  ## Its the DU which communicates with the CU so no need for DU ip-address
  f1duIpAddress: "127.0.0.1"
  f1cuPort: "2153"
  f1duPort: "2153"

## Debugging section
podSecurityContext:
  runAsUser: 0
  runAsGroup: 0

start:
  gnbcu: true #If false the network function container will run in sleep mode for manually testing
  tcpdump: false

includeTcpDumpContainer: false #If true it will add a tcpdump container inside network function pod for debugging

tcpdumpimage:
   repository: docker.io/corfr/tcpdump
   version: latest
   #pullPolicy: IfNotPresent or Never or Always
   pullPolicy: IfNotPresent

resources:
  define: false
  limits:
    tcpdump:
      cpu: 100m
      memory: 128Mi
    nf:
      cpu: 100m
      memory: 128Mi
  requests:
    tcpdump:
      cpu: 100m
      memory: 128Mi
    nf:
      cpu: 100m
      memory: 128Mi


resources:
  define: false
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
   cpu: 100m
   memory: 256Mi


tolerations: []

affinity: {}

terminationGracePeriodSeconds: 5

nodeSelector: {}

nodeName: 