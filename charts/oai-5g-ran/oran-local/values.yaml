oai-gnb-cu-cp:
  enabled: true
  weight: 0
  kubernetesType: Openshift #Openshift/Vanilla Vanilla for Upstream Kubernetes
  nfimage:   # image name either locally present or in a public/private repository
    repository: image-registry.openshift-image-registry.svc:5000/engage5g/oai-gnb
    version: 2023.w45 # image tag or develop
    # pullPolicy: IfNotPresent or Never or Always
    pullPolicy: IfNotPresent
  includeTcpDumpContainer: false #only for taking pcaps inside network function pod
  imagePullSecrets:
    - name: "regcred"
  ## CU-CP can work with 1 virtual ip-address here we are using three different virtual interfaces. 
  ## In case you are using 1 ip-address for all 3 logical interfaces then please change it template/configmap.yaml
  ## Change these ip-addresses according to your environment
  multus:
    # to remove the default gateway change it with ""
    defaultGateway: ""
    e1Interface:
      create: true
      IPadd: "192.168.18.12"
      Netmask: "24"
      # #name inside the pod is hardcoded right now
      # name: "e1"
      # if gatway is empty then it will be removed
      #Gateway: ""
      #routes: [{'dst': '10.8.0.0/24','gw': '172.21.7.254'}, {'dst': '10.9.0.0/24','gw': '172.21.7.254'}]
      hostInterface: "bond0"      # Interface of the host machine on which this pod will be scheduled
    n2Interface:
      create: true
      IPadd: "172.21.6.98"
      Netmask: "22"
      # #name inside the pod is hardcoded right now
      # name: "n2"
      # if gatway is empty then it will be removed
      #Gateway: ""
      #routes: 
      hostInterface: "bond0"      # Interface of the host machine on which this pod will be scheduled
    f1cInterface:
      create: true
      IPadd: "192.168.20.12"
      Netmask: "22"
      # #name inside the pod is hardcoded right now
      # name: "f1c"
      # if gatway is empty then it will be removed
      #Gateway: ""
      #routes: 
      hostInterface: "bond0"      # Interface of the host machine on which this pod will be scheduled
  ## configuration file is in template/config.yaml 
  ## It is taken from https://gitlab.eurecom.fr/oai/openairinterface5g/-/blob/develop/ci-scripts/conf_files/gnb-cucp.sa.f1.conf
  config:
    timeZone: "Europe/Paris"
    useAdditionalOptions: "--sa --log_config.global_log_options level,nocolor,time"
    mcc: "001"   # check the information with AMF, SMF, UPF/SPGWU
    mnc: "01"    # check the information with AMF, SMF, UPF/SPGWU
    mncLength: "2" # check the information with AMF, SMF, UPF/SPGWU
    tac: "1"     # check the information with AMF
    snssaiList: "({ sst = 1, sd = 0xffffff })"
    amfIpAddress: "172.21.6.94"  # amf ip-address
    e1IpAddress: "192.168.18.13"  ## CU-UP ip-address 
    #Normally you don't have to set this but at the moment it is required
    f1duIpAddress: "192.168.20.13"

  nodeSelector: {}


oai-gnb-cu-up:
  enabled: true
  kubernetesType: Openshift  #Vanilla for community kubernetes distribution else Openshift for Openshift
  weight: 1
  ## In case of using these charts on Openshift then please use UBI images
  ## To know more about them follow this tutorial https://gitlab.eurecom.fr/oai/cn5g/oai-cn5g-fed/-/tree/master/openshift
  nfimage:   # image name either locally present or in a public/private repository
    repository: image-registry.openshift-image-registry.svc:5000/engage5g/oai-cu-up  ## dockerhub oaisoftwarealliance/oai-gnb  
    version: 2023.w45 # image tag or develop
    # pullPolicy: IfNotPresent or Never or Always
    pullPolicy: IfNotPresent

  ## good to use when pulling images from docker-hub mention 
  imagePullSecrets: 
    - name: "regcred"
  ## CU-UP can work with 1 virtual ip-address here we are using three different virtual interfaces. 
  ## In case you are using 1 ip-address for all 3 logical interfaces then please change it template/configmap.yaml
  ## Change these ip-addresses according to your environment
  multus:
    #if defaultGateway is empty then it will be removed
    defaultGateway: ""
    e1Interface:
      create: true
      IPadd: "192.168.18.13"
      Netmask: "24"
      # #name inside the pod is hardcoded right now
      # name: "e1"
      # if gatway is empty then it will be removed
      #Gateway: ""
      #routes: [{'dst': '10.8.0.0/24','gw': '172.21.7.254'}, {'dst': '10.9.0.0/24','gw': '172.21.7.254'}]
      hostInterface: "bond0"      # Interface of the host machine on which this pod will be scheduled
    n3Interface:
      create: true
      IPadd: "192.168.25.4"
      Netmask: "22"
      # #name inside the pod is hardcoded right now
      # name: "n3"
      # if gatway is empty then it will be removed
      #Gateway: ""
      #routes: []
      hostInterface: "bond0"      # Interface of the host machine on which this pod will be scheduled
    f1uInterface:
      create: true
      IPadd: "192.168.20.14"
      Netmask: "22"
      # #name inside the pod is hardcoded right now
      # name: "f1u"
      # if gatway is empty then it will be removed
      #Gateway: ""
      #routes: []
      hostInterface: "bond0"      # Interface of the host machine on which this pod will be scheduled

  ## configuration file is in template/config.yaml 
  ## It is taken from https://gitlab.eurecom.fr/oai/openairinterface5g/-/blob/develop/ci-scripts/conf_files/gnb-cuup.sa.f1.conf
  config:
    timeZone: "Europe/Paris"
    useAdditionalOptions: "--sa"
    mcc: "001"   # check the information with AMF, SMF, UPF/SPGWU
    mnc: "01"    # check the information with AMF, SMF, UPF/SPGWU
    mncLength: "2" # check the information with AMF, SMF, UPF/SPGWU
    tac: "1"     # check the information with AMF
    nssaiSst: "1"  #currently only 4 standard values are allowed 1,2,3,4 
    nssaiSd: "0xffffff"    #values in hexa-decimal format
    e1IpAddress: "172.21.6.195"
    ## Its the DU which communicates with the CU so no need for DU ip-address
    f1duIpAddress: "192.168.20.13"

  start:
    gnbcuup: true #If false the network function container will run in sleep mode for manually testing
    tcpdump: false

  includeTcpDumpContainer: false #If true it will add a tcpdump container inside network function pod for debugging

oai-gnb-du:
  enabled: true
  weight: 2
  kubernetesType: Openshift  #Vanilla for community kubernetes distribution else Openshift for Openshift
  ## In case of using these charts on Openshift then please use UBI images
  ## To know more about them follow this tutorial https://gitlab.eurecom.fr/oai/cn5g/oai-cn5g-fed/-/tree/master/openshift
  nfimage:   # image name either locally present or in a public/private repository
    repository: image-registry.openshift-image-registry.svc:5000/engage5g/oai-gnb ## dockerhub oaisoftwarealliance/oai-gnb
    version: 2023.w45 # image tag or develop
    # pullPolicy: IfNotPresent or Never or Always
    pullPolicy: IfNotPresent
  ## good to use when pulling images from docker-hub mention
  imagePullSecrets:
    - name: "regcred"
  # oai-gnb-du helm-charts can be used in RFSimulated mode which does not require multiple interaces. 
  # In case you use the charts with a RU/USRP you need a dedicated interface with the RU. 
  ## Change these ip-addresses according to your environment
  multus:
    # if default gatway is left blank then it will be removed
    defaultGateway: ""
    f1Interface:
      create: true
      IPadd: "172.21.6.193"
      Netmask: "22"
      # #name inside the pod is hardcoded right now
      # name: "f1"
      # if gatway is empty then it will be removed
      #Gateway: "172.21.7.254"
      #routes: [{'dst': '10.8.0.0/24','gw': '172.21.7.254'}, {'dst': '10.9.0.0/24','gw': '172.21.7.254'}]
      hostInterface: "bond0"      # Interface of the host machine on which this pod will be scheduled
    ruInterface:            #Only needed if using a ethernet based RU/USRP
      create: false
      IPadd: "192.168.80.90"
      Netmask: "24"
      # #name inside the pod is hardcoded right now
      # name: "ru"
      # if gatway is commented then it will be remove
      #Gateway: "192.168.80.1"  #In case you don't have a gateway remove it from here
      ## The value must be [0, master's MTU]. If commented it will masters MTU
      #mtu: 9000
      hostInterface: "bond0"      # Interface of the host machine on which this pod will be scheduled

  ## If you want to change more configuration parameters then you should mount the config file  
  # in templates/configmap.yaml
  # Example config files --> https://gitlab.eurecom.fr/oai/openairinterface5g/-/tree/develop/targets/PROJECTS/GENERIC-NR-5GC/CONF 
  config:
    mountConfig: false          #If config file is mounted then please edit mount.conf in templates/configmap.yaml properly 
    timeZone: "Europe/Paris"
    useAdditionalOptions: "--sa --rfsim --log_config.global_log_options level,nocolor,time"
    rfSimulator: "server"       #If you are not using in RFsimulator mode then you can leave this empty
    # If mounting the configuration file then below parameters are not used
    gnbduName: "oai-du-rfsim"
    useSaTDDdu: "yes"
    mcc: "001"   # check the information with AMF, SMF, UPF/SPGWU
    mnc: "01"    # check the information with AMF, SMF, UPF/SPGWU
    mncLength: "2" # check the information with AMF, SMF, UPF/SPGWU
    tac: "1"     # check the information with AMF
    nssaiList: "({ sst = 1, sd = 0xffffff }, { sst = 2, sd = 0xffffff })"
    f1IfName: "f1"                # f1 incase multus.f1Interface.create is true
    f1cuIpAddress: "172.21.6.194"     # replace this value with CU f1 ip-address or CU-CP F1C ip-address if not using multus
    f1duIpAddress: "172.21.6.193"    # 172.21.16.100 if using multus
    f1cuPort: "2152"
    f1duPort: "2152"

  start:
    gnbdu: true #If false the network function container will run in sleep mode for manually testing
    tcpdump: false

  includeTcpDumpContainer: false #If true it will add a tcpdump container inside network function pod for debugging
