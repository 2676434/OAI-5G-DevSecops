################################################################################
# Licensed to the OpenAirInterface (OAI) Software Alliance under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The OpenAirInterface Software Alliance licenses this file to You under
# the OAI Public License, Version 1.1  (the "License"); you may not use this file
# except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.openairinterface.org/?page_id=698
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#-------------------------------------------------------------------------------
# For more information about the OpenAirInterface (OAI) Software Alliance:
#      contact@openairinterface.org
################################################################################

# OAI CN Configuration File
### This file can be used by all OAI NFs
### Some fields are specific to an NF and will be ignored by other NFs
### The {{ env['ENV_NAME'] }} syntax lets you define these values in a docker-compose file
### If you intend to mount this file or use a bare-metal deployment, please refer to README.md
### The README.md also defines default values and allowed values for each configuration parameter

############# Common configuration

# Log level for all the NFs
log_level:
  general: debug

# If you enable registration, the other NFs will use the NRF discovery mechanism
register_nf:
  general: yes

############## SBI Interfaces
### Each NF takes its local SBI interfaces and remote interfaces from here, unless it gets them using NRF discovery mechanisms
nfs:
  amf:
    host: oai-amf
    sbi:
      port_http1: 80
      api_version: v1
      interface_name: eth0
    n1:
      interface_name: eth0
      port: 38412
  smf:
    host: oai-smf
    sbi:
      port_http1: 80
      api_version: v1
      interface_name: eth0
    n4:
      interface_name: eth0
      port: 8805
  udm:
    host: oai-udm
    sbi:
      port_http1: 80
      api_version: v1
      interface_name: eth0
  udr:
    host: oai-udr
    sbi:
      port_http1: 80
      api_version: v1
      interface_name: eth0
  ausf:
    host: oai-ausf
    sbi:
      port_http1: 80
      api_version: v1
      interface_name: eth0
  pcf:
    host: oai-pcf
    sbi:
      port_http1: 80
      api_version: v1
      interface_name: eth0
  nrf:
    host: oai-nrf
    sbi:
      port_http1: 80
      api_version: v1
      interface_name: eth0

#### Common for UDR and AMF
database:
  server: mysql
  user: test
  type: mysql
  password: test
  database_name: oai_db
  random: true   # TODO can we find a better name for this? What does it mean?
  connection_timeout: 300 # seconds

############## NF-specific configuration
amf:
  # This really depends on if we want to keep the "mini" version or not
  support_features:
    use_external_ausf: yes
    use_external_udm: no   # TODO Why is this no in the original docker-compose?
    use_external_nssf: no
  served_guami_list:
    - mcc: 208
      mnc: 95
      region_id: 128
      amf_set_id: 1
    - mcc: 460
      mnc: 11
      region_id: 10
      amf_set_id: 1
  plmn_support_list:
    - mcc: 208
      mnc: 95
      tac: 0xa000
      nssai:
        - sst: 128
          sd: 12
        - sst: 222
          sd: 123
  supported_integrity_algorithms:
    - "NIA0"
    - "NIA1"
    - "NIA2"
  supported_ciphering_algorithms:
    - "NEA0"
    - "NEA1"
    - "NEA2"

smf:
  ue_mtu: 1500
  support_features:
    # TODO why is UDM actually not used in this whole scenario?
    use_local_subscription_info: yes # Use infos from local_subscription_info or from UDM
    use_local_pcc_rules: no # Use infos from local_pcc_rules or from PCF
  # this is an example how you can enable/disable UPF features while the profile comes from NRF, host has to match with NRF profile
  upfs:
    - host: ulcl.node.5gcn.mnc95.mcc208.3gppnetwork.org
      config:
        enable_usage_reporting: yes
    - host: aupf1.node.5gcn.mnc95.mcc208.3gppnetwork.org
      config:
        enable_usage_reporting: no
    - host: aupf2.node.5gcn.mnc95.mcc208.3gppnetwork.org
      config:
        enable_usage_reporting: no
  ue_dns:
    primary_ipv4: "172.21.3.100"
    secondary_ipv4: "8.8.8.8"
  ims:
    pcscf_ipv4: "127.0.0.1"

## DNN configuration
dnns:
  - dnn: "oai"
    pdu_session_type: "IPv4"
    ipv4_pool: "12.1.1.151 - 12.1.1.253"
  - dnn: "oai.ipv4"
    pdu_session_type: "IPv4"
    ipv4_pool: "12.1.1.51 - 12.1.1.150"
  - dnn: "default"
    pdu_session_type: "IPv4"
    ipv4_pool: "12.1.1.2 - 12.1.1.50"
  - dnn: "ims"
    pdu_session_type: "IPv4v6"
    ipv4_pool: "14.1.1.2 - 14.1.1.253"

local_subscription_infos:
  - nssai:
      sst: 1
      sd: 0xFFFFFF
    dnn: "oai"
    scc_mode: 1
    qos_profile:
      5qi: 6
  - nssai:
      sst: 1
      sd: 1
    dnn: "oai.ipv4"
    scc_mode: 1
    qos_profile:
      5qi: 7
  - nssai:
      sst: 222
      sd: 123
    dnn: "default"
    qos_profile:
      5qi: 9

pcf:
  local_policy:
    policy_decisions_path: /openair-pcf/policies/policy_decisions
    pcc_rules_path: /openair-pcf/policies/pcc_rules
    traffic_rules_path: /openair-pcf/policies/traffic_rules