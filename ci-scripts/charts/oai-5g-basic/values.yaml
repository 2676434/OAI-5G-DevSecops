mysql:
  enabled: true
  imagePullPolicy: IfNotPresent
  oai5gdatabase: basic
  persistence:
    enabled: false
oai-nrf:
  enabled: true
  kubernetesType: Openshift #Openshift/Vanilla Vanilla for Upstream Kubernetes
  nfimage:  # image name either locally present or in a public/private repository
    repository: image-registry.openshift-image-registry.svc:5000/oaicicd-core/oai-nrf           ## The image will be pulled from dockerhub
    version: NRF_TAG                                    ## The branch to be used to pull from dockerhub
    # pullPolicy: IfNotPresent or Never or Always
    pullPolicy: IfNotPresent
  nodeSelector: {}
oai-udr:
  enabled: true
  kubernetesType: Openshift #Openshift/Vanilla Vanilla for Upstream Kubernetes
  nfimage:  # image name either locally present or in a public/private repository
    repository: image-registry.openshift-image-registry.svc:5000/oaicicd-core/oai-udr           ## The image will be pulled from dockerhub
    version: UDR_TAG                                    ## The branch to be used to pull from dockerhub
    # pullPolicy: IfNotPresent or Never or Always
    pullPolicy: IfNotPresent
  config:
    http2Param: "--http2-prior-knowledge"
  nodeSelector: {}
oai-udm:
  enabled: true
  kubernetesType: Openshift #Openshift/Vanilla Vanilla for Upstream Kubernetes
  nfimage:  # image name either locally present or in a public/private repository
    repository: image-registry.openshift-image-registry.svc:5000/oaicicd-core/oai-udm           ## The image will be pulled from dockerhub
    version: UDM_TAG                                    ## The branch to be used to pull from dockerhub
    # pullPolicy: IfNotPresent or Never or Always
    pullPolicy: IfNotPresent
  config:
    http2Param: "--http2-prior-knowledge"
  nodeSelector: {}
oai-ausf:
  enabled: true
  kubernetesType: Openshift #Openshift/Vanilla Vanilla for Upstream Kubernetes
  nfimage:  # image name either locally present or in a public/private repository
    repository: image-registry.openshift-image-registry.svc:5000/oaicicd-core/oai-ausf           ## The image will be pulled from dockerhub
    version: AUSF_TAG                                    ## The branch to be used to pull from dockerhub
    # pullPolicy: IfNotPresent or Never or Always
    pullPolicy: IfNotPresent
  config:
    http2Param: "--http2-prior-knowledge"
  nodeSelector: {}
oai-amf:
  enabled: true
  kubernetesType: Openshift #Openshift/Vanilla Vanilla for Upstream Kubernetes
  nfimage:  # image name either locally present or in a public/private repository
    repository: image-registry.openshift-image-registry.svc:5000/oaicicd-core/oai-amf           ## The image will be pulled from dockerhub
    version: AMF_TAG                                    ## The branch to be used to pull from dockerhub
    # pullPolicy: IfNotPresent or Never or Always
    pullPolicy: IfNotPresent
  multus:
    create: true
    n2IPadd: "172.21.6.200"
    n2Netmask: "22"
    n2Gateway: "172.21.7.254"
    hostInterface: "bond0"      # Interface of the host machine on which this pod will be scheduled
  config:
    http2Param: "--http2-prior-knowledge"
  nodeSelector:     #Using dedicated nodeName in the chart directly
    worker: "telco"
oai-spgwu-tiny:
  enabled: true
  kubernetesType: Openshift #Openshift/Vanilla Vanilla for Upstream Kubernetes
  nfimage:  # image name either locally present or in a public/private repository
    repository: image-registry.openshift-image-registry.svc:5000/oaicicd-core/oai-spgwu-tiny    ## The image will be pulled from dockerhub
    version: SPGWU_TINY_TAG                                    ## The branch to be used to pull from dockerhub
    # pullPolicy: IfNotPresent or Never or Always
    pullPolicy: IfNotPresent
  multus:
    create: true
    n3Ip: "172.21.6.201"
    n3Netmask: "22"
    n6Gw: "172.21.7.254"
    hostInterface: "bond0"
  nodeSelector: 
    worker: "telcort"
  config:
    http2Param: "--http2-prior-knowledge"
    nrfHTTPVersion: 2
    n3If: "net1"  # net1 if gNB is outside the cluster network and multus creation is true else eth0
    n4If: "eth0" # use for SMF communication
    n6If: "net1"  # net1 if gNB is outside the cluster network and multus creation is true else eth0 (important because it sends the traffic towards internet)
    threadsN3Ul: "1"
    threadsN6Dl: "1"
    threadsN6Prio: 99
    threadsN3Prio: 98
    threadsN4Prio: 88
    netUeIp: "12.1.1.0/24"  # The range in which UE ip-address will be allocated should be configured the same in SMF
  # Optional (set for ims dnn)
    netUeIp2: "12.2.1.0/24"  # The range in which UE ip-address will be allocated should be configured the same in SMF
    registerNRF: "yes"
    nrfFqdn: "oai-nrf" # make sure this can be resolved by container dns
    #Mandatory to configure atlease one slice
    nssaiSst0: 1 # should match with SMF information
    nssaiSd0: "0xFFFFFF"  # should match with SMF information (Optional, if removed sd value will be 0xFFFFFF)
    dnn0: "oai" # should match with SMF information
    #Upto 4 slices can be added from here to add more you need to add manullay in config.yaml. Please follow the same way of adding slices nssaiSST$,nssaiSd$,dnn$ ($=0,1,2,3)
    nssaiSst1: 1 # should match with SMF information (Optional, if removed slice will not be configured)
    nssaiSd1: "0xFFFFFF"  # should match with SMF information (Optional, if removed sd value will be 0xFFFFFF only if nssaiSst1 is configured)
    dnn1: "ims" # should match with SMF information
    logLevel: "debug"
oai-traffic-server:
  enabled: true
  kubernetesType: Openshift #Openshift/Vanilla Vanilla for Upstream Kubernetes
  trafficServer:
    repository: image-registry.openshift-image-registry.svc:5000/oaicicd-core/oai-traffic-server
    version: latest
    #pullPolicy: IfNotPresent or Never or Always
    pullPolicy: IfNotPresent
  multus:
    create: true
    n3Ip: "172.21.6.202"
    n3Netmask: "22"
    n6Gw: "172.21.7.254"
    hostInterface: "bond0"
  config:
    ueroute: 12.1.1.0/24
    upfIpadd: 172.21.6.201
    noOfIperf3Server: 2
oai-smf:
  enabled: true
  kubernetesType: Openshift #Openshift/Vanilla Vanilla for Upstream Kubernetes
  nfimage:  # image name either locally present or in a public/private repository
    repository: image-registry.openshift-image-registry.svc:5000/oaicicd-core/oai-smf           ## The image will be pulled from dockerhub
    version: SMF_TAG                                    ## The branch to be used to pull from dockerhub
    # pullPolicy: IfNotPresent or Never or Always
    pullPolicy: IfNotPresent
  config:
    http2Param: "--http2-prior-knowledge"

